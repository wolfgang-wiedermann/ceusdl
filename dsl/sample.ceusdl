// Beispiel in CEUS-Definition-Language

// 1. Interface Definitionen

interface Raum {
    // Standard-Attributfelder
    base KNZ:varchar(len="50", primary_key="true");
    base KURZBEZ:varchar(len="100");
    base LANGBEZ:varchar(len="500");
    // Fakt-Felder
    base FLAECHE:decimal(len="12,2", unit="Quadratmeter");
    // Referenzen zu anderen Attributen
    ref Gebaeude.KNZ;
    ref Raumnutzungsart.KNZ
}

interface Gebaeude {
    // Standard-Attributfelder 
    base KNZ:varchar(len="50", primary_key="true");
    base KURZBEZ:varchar(len="100");
    base LANGBEZ:varchar(len="500");
}

interface Raumnutzungsart {
    // Standard-Attributfelder
    base KNZ:varchar(len="50", primary_key="true");
    base KURZBEZ:varchar(len="100");
    base LANGBEZ:varchar(len="500");
}

// 2. Attribut-Definitionen

attribute Raum(lookup="Raum") {
    fields:[
        KNZ:Raum.KNZ;
        KURZBEZ:Raum.KURZBEZ;
        LANGBEZ:Raum.LANGBEZ;
        FLAECHE:Raum.FLAECHE;
    ];
    parents:[
        Gebaeude;
        Raumnutzungsart;
    ];
}

attribute Gebaeude(lookup="Gebaeude") {
    fields:[
        KNZ:Gebaeude.KNZ;
        KURZBEZ:Gebaeude.KURZBEZ;
        LANGBEZ:Gebaeude.LANGBEZ;
    ];
}

attribute Raumnutzungsart(lookup="Raumnutzungsart") {
    fields:[
        KNZ:Raumnutzungsart.KNZ;
        KURZBEZ:Raumnutzungsart.KURZBEZ;
        LANGBEZ:Raumnutzungsart.LANGBEZ;
    ];
}

// 3. Metrik-Definitionen

// TODO:
// Es gibt Basismetriken (type="Basic") und abgeleitete Metriken (type="Formula")
// Basismetriken können z. B. durch Filter eingeschränkt werden,
// da muss ich mir noch überlegen, wie ich das einbaue!

metric RaumFlaeche(type="Basic") {
    // label: Sprechender Name in Microstrategy
    label:"Fläche";
    // Aggregationsfunktion festlegen (sum, count, max, min, avg)
    function:sum;
    // ? src-Array, da der Fakt einer Metrik evtl. ja auch 
    // über verschiedene Tabellen aufgelöst werden kann ?
    src:[
        Raum.FLAECHE;
    ];
}

metric RaumVolumen(type="Formula") {
    label:"Volumen";
    formula:RaumFlaeche*2.5; // Annahme: Alle Räume sind exakt 2.50m hoch
}